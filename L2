import React, { useState, useEffect, useRef } from "react";

function App() {
  const [characters, setCharacters] = useState([]);
  const [totalPages, setTotalPages] = useState(0);
  const currentPageRef = useRef(1); 
  const [displayData, setDisplayData] = useState([]);

  const fetchData = async () => {
    const res = await fetch(
      `https://rickandmortyapi.com/api/character?page=${currentPageRef.current}`
    );
    const data = await res.json();
    setCharacters(data.results);
    setTotalPages(data.info.pages);
  };

  useEffect(() => {
    fetchData();
  }, []);

  useEffect(() => {
    setDisplayData(characters.slice(0, 8)); 
  }, [characters]);

  const handlePageChange = (page) => {
    currentPageRef.current = page;
    fetchData();
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h2>Rick and Morty Characters</h2>

      <div
        style={{
          display: "grid",
          gridTemplateColumns: "repeat(auto-fill, minmax(150px, 1fr))",
          gap: "10px",
        }}
      >
        {displayData.map((char) => (
          <div
            key={char.id}
            style={{
              border: "1px solid #ccc",
              borderRadius: "5px",
              textAlign: "center",
              padding: "10px",
              background: "#f9f9f9",
            }}
          >
            <img
              src={char.image}
              alt={char.name}
              style={{ width: "100%", borderRadius: "5px" }}
            />
            <p>{char.name}</p>
          </div>
        ))}
      </div>

      <div style={{ marginTop: "20px", display: "flex", flexWrap: "wrap" }}>
        {Array.from({ length: totalPages }, (_, i) => (
          <button
            key={i + 1}
            onClick={() => handlePageChange(i + 1)}
            style={{
              margin: "5px",
              padding: "8px 12px",
              border: "1px solid #ccc",
              borderRadius: "4px",
              background:
                currentPageRef.current === i + 1 ? "#4cafef" : "#fff",
              color: currentPageRef.current === i + 1 ? "#fff" : "#000",
              cursor: "pointer",
            }}
          >
            {i + 1}
          </button>
        ))}
      </div>
    </div>
  );
}

export default App;
