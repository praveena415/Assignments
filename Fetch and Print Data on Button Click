<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Data Fetch App</title>
  <script crossorigin src="https://cdn.jsdelivr.net/npm/react@18/umd/react.development.js"></script>
  <script crossorigin src="https://cdn.jsdelivr.net/npm/react-dom@18/umd/react-dom.development.js"></script>
</head>
<body>
  <div id="fetch-root">
    this is dom heading
  </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/@babel/standalone/babel.min.js"></script>

<script type="text/babel">
  const container = ReactDOM.createRoot(document.getElementById("fetch-root"));

  function ProductFetcher() {
    const [state, setState] = React.useState({
      products: [],
      isLoading: false,
      hasError: null
    });

    async function loadProducts() {
      setState({ ...state, isLoading: true });
      try {
        const response = await fetch("https://fakestoreapi.com/products");
        const result = await response.json();
        setState({ ...state, products: result, isLoading: false });
        setTimeout(() => {
          console.log(state);
        }, 4000);
      } catch (err) {
        setState({ ...state, hasError: err.message, isLoading: false });
      }
    }

    return (
      <>
        <button onClick={loadProducts}>Load Products</button>
        {state.isLoading && <h3>Loading...</h3>}
        {state.hasError && <h4>{state.hasError}</h4>}
        {state.products.map((product, index) => (
          <div key={index}>
            <h4>Title: {product.title}</h4>
            <p><b>Price: ${product.price}</b></p>
          </div>
        ))}
      </>
    );
  }

  container.render(<ProductFetcher />);
</script>

</html>
