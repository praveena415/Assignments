<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Task Manager</title>
  <style>
    body {
      font-family: Arial;
      padding: 20px;
    }
    .task {
      border: 1px solid #ccc;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 8px;
    }
    .task input, .task select {
      margin-top: 5px;
    }
    .buttons {
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <h2>Task Manager</h2>
  <div id="taskList"></div>
  <div id="status"></div>

  <script>
    const API = 'https://your-mockapi-url.mockapi.io/tasks'; 

    const taskList = document.getElementById('taskList');
    const status = document.getElementById('status');

    async function loadTasks() {
      taskList.innerHTML = '';
      status.textContent = 'Loading tasks...';
      try {
        const res = await fetch(API);
        if (!res.ok) throw new Error('Failed to load tasks');
        const tasks = await res.json();
        status.textContent = '';
        tasks.forEach(displayTask);
      } catch (err) {
        status.textContent = 'Error fetching tasks';
        console.error(err);
      }
    }

    function displayTask(task) {
      const div = document.createElement('div');
      div.className = 'task';
      div.id = `task-${task.id}`;
      div.innerHTML = `
        <strong>Title:</strong> <input type="text" value="${task.title}" id="title-${task.id}">
        <br>
        <strong>Status:</strong> 
        <select id="status-${task.id}">
          <option value="Pending" ${task.status === 'Pending' ? 'selected' : ''}>Pending</option>
          <option value="Completed" ${task.status === 'Completed' ? 'selected' : ''}>Completed</option>
        </select>
        <div class="buttons">
          <button onclick="updateTask('${task.id}')">Save</button>
          <button onclick="deleteTask('${task.id}')">Delete</button>
        </div>
      `;
      taskList.appendChild(div);
    }

    async function updateTask(id) {
      const title = document.getElementById(`title-${id}`).value.trim();
      const statusVal = document.getElementById(`status-${id}`).value;
      if (!title) {
        alert('Title cannot be empty.');
        return;
      }
      try {
        const res = await fetch(`${API}/${id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ title, status: statusVal })
        });
        if (!res.ok) throw new Error('Update failed');
        alert('Task updated successfully.');
        loadTasks(); 
      } catch (err) {
        alert('Error updating task.');
        console.error(err);
      }
    }

    async function deleteTask(id) {
      const confirmed = confirm('Are you sure you want to delete this task?');
      if (!confirmed) return;
      try {
        const res = await fetch(`${API}/${id}`, {
          method: 'DELETE'
        });
        if (!res.ok) throw new Error('Delete failed');
        document.getElementById(`task-${id}`).remove();
        alert('Task deleted.');
      } catch (err) {
        alert('Error deleting task.');
        console.error(err);
      }
    }

    loadTasks();
  </script>
</body>
</html>
