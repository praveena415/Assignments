<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>User Registration</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 30px;
      max-width: 500px;
      margin: auto;
    }
    h2 {
      text-align: center;
    }
    form {
      display: flex;
      flex-direction: column;
    }
    input {
      padding: 10px;
      margin: 10px 0;
      font-size: 16px;
    }
    button {
      padding: 10px;
      background-color: #28a745;
      color: white;
      border: none;
      font-size: 16px;
      cursor: pointer;
    }
    .message {
      margin-top: 15px;
      font-weight: bold;
      text-align: center;
    }
    .success {
      color: green;
    }
    .error {
      color: red;
    }
  </style>
</head>
<body>

  <h2>User Registration</h2>

  <form id="registrationForm">
    <input type="text" id="name" placeholder="Full Name" required />
    <input type="email" id="email" placeholder="Email" required />
    <input type="password" id="password" placeholder="Password" required />
    <button type="submit">Register</button>
  </form>

  <div id="message" class="message"></div>

  <script>
    document.getElementById("registrationForm").addEventListener("submit", async function (event) {
      event.preventDefault();

      const name = document.getElementById("name").value.trim();
      const email = document.getElementById("email").value.trim();
      const password = document.getElementById("password").value.trim();
      const messageDiv = document.getElementById("message");

      // Clear previous messages
      messageDiv.textContent = "";
      messageDiv.className = "message";

      // Validate fields
      if (!name || !email || !password) {
        messageDiv.textContent = "Please fill in all fields.";
        messageDiv.classList.add("error");
        return;
      }

      const payload = { name, email, password };

      try {
        const response = await fetch("https://mockapi.io/users", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(payload)
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || "Registration failed");
        }

        const data = await response.json();
        messageDiv.textContent = "Registration successful!";
        messageDiv.classList.add("success");
        document.getElementById("registrationForm").reset();
      } catch (error) {
        messageDiv.textContent = "Error: " + error.message;
        messageDiv.classList.add("error");
      }
    });
  </script>

</body>
</html>
